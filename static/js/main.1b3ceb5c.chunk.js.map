{"version":3,"sources":["../../src/contexts/CollapsibleContext.tsx","../../src/Collapsible.tsx","../../src/CollapsibleHead.tsx","../../src/CollapsibleBody.tsx","App.tsx","index.tsx"],"names":["CollapsibleContext","createContext","CollapsibleContextProvider","props","useState","isOpen","setIsOpen","value","toggleCollapsible","Collapsible","React","className","CollapsibleHead","useContext","onClick","CollapsibleBody","App","ReactDOM","render","document","getElementById"],"mappings":"2RAEaA,EAAqBC,wBAA3B,IAEDC,EAAiC,SAACC,G,MACVC,oBAAQ,GAA7BC,OAAQC,OAMf,OACE,kBAACN,EAAD,UAA6BO,MAAO,CAAEF,OAAF,EAAUG,kBALtB,WACxBF,GAAU,2BAKPH,EAFL,WCRIM,EAAkB,SAACN,GACvB,OACEO,yBACE,yBAAKC,UAAU,yBAAyBR,EAF5C,YCDIS,EAAsB,SAACT,G,IACnBK,EAA2BK,qBAAWb,GAAtCQ,kBAER,OACE,yBAAKM,QAASN,EAAmBG,UAAU,oBACxCR,EAFL,WCHIY,EAAsB,SAACZ,G,IAErBQ,EAAY,CAAlB,oBAEA,OAHwBE,qBAAWb,GAA3BK,QAEIM,oCACL,yBAAKA,UAAWA,aAAsBR,EAA7C,WCWaa,G,MATH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,kBACA,kBAAC,EAAD,wBCRNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1b3ceb5c.chunk.js","sourcesContent":["import React, { createContext, FC, useState } from 'react';\n\nexport const CollapsibleContext = createContext<object>({});\n\nconst CollapsibleContextProvider: FC = (props) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const toggleCollapsible = () => {\n    setIsOpen((isOpen) => !isOpen);\n  };\n\n  return (\n    <CollapsibleContext.Provider value={{ isOpen, toggleCollapsible }}>\n      {props.children}\n    </CollapsibleContext.Provider>\n  );\n};\n\nexport default CollapsibleContextProvider;\n","import React, { FC } from 'react';\nimport CollapsibleContextProvider from './contexts/CollapsibleContext';\n\nconst Collapsible: FC = (props) => {\n  return (\n    <CollapsibleContextProvider>\n      <div className='collapsible-container'>{props.children}</div>\n    </CollapsibleContextProvider>\n  );\n};\n\nexport default Collapsible;\n","import React, { FC, useContext } from 'react';\nimport { CollapsibleContext } from './contexts/CollapsibleContext';\n\nconst CollapsibleHead: FC = (props) => {\n  const { toggleCollapsible }: any = useContext(CollapsibleContext);\n\n  return (\n    <div onClick={toggleCollapsible} className='collapsible-head'>\n      {props.children}\n    </div>\n  );\n};\n\nexport default CollapsibleHead;\n","import React, { FC, useContext } from 'react';\nimport { CollapsibleContext } from './contexts/CollapsibleContext';\n\nconst CollapsibleBody: FC = (props) => {\n  const { isOpen }: any = useContext(CollapsibleContext);\n  const className = ['collapsible-body'];\n  if (isOpen) className.push('collapsible-body--is-open');\n  return <div className={className.join(' ')}>{props.children}</div>;\n};\n\nexport default CollapsibleBody;\n","import React from 'react';\n\nimport {\n  Collapsible,\n  CollapsibleHead,\n  CollapsibleBody\n} from '@mtburdon/react-collapsible';\nimport '@mtburdon/react-collapsible/dist/index.css';\n\nconst App = () => {\n  return (\n    <Collapsible>\n      <CollapsibleHead>Toggle me</CollapsibleHead>\n      <CollapsibleBody>Some content</CollapsibleBody>\n    </Collapsible>\n  );\n};\n\nexport default App;\n","import './index.css'; // Basic CSS reset\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}