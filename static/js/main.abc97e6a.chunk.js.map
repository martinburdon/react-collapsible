{"version":3,"sources":["../../src/contexts/CollapsibleContext.tsx","../../src/Collapsible.tsx","../../src/CollapsibleHead.tsx","../../src/CollapsibleBody.tsx","App.tsx","index.tsx"],"names":["CollapsibleContext","createContext","CollapsibleContextProvider","props","useState","value","isOpen","toggleCollapsible","setIsOpen","React","className","useContext","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"yRAEaA,EAAqBC,wBAA3B,IAEDC,EAA8BC,YAAD,MACLC,oBAA5B,GADiC,mBAC3B,EAD2B,KAC3B,EAD2B,KAOjC,OACE,kBAACJ,EAAD,UAA6BK,MAAO,CAAEC,SAAQC,kBALtB,WACxBC,GAAWF,YAAD,OAAVE,QAKGL,EAFL,WCRF,EAAgBA,YACd,OACEM,yBACE,yBAAKC,UAAU,yBAAyBP,EAF5C,YCDF,EAAgBA,YAAD,IACLI,EAAsBI,qBAA9B,GAAQJ,kBAER,OACE,yBAAKK,QAASL,EAAmBG,UAAU,oBACxCP,EAFL,WCHF,EAAgBA,YAAD,IAEPO,EAAY,CAAlB,oBAEA,OAHmBC,qBAAnB,GAAQL,QAEII,kBACL,yBAAKA,UAAWA,aAAsBP,EAA7C,WCWaU,G,MATH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,kBACA,kBAAC,EAAD,wBCPNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.abc97e6a.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\n\nexport const CollapsibleContext = createContext<object>({})\n\nconst CollapsibleContextProvider = (props: any) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleCollapsible = () => {\n    setIsOpen((isOpen) => !isOpen)\n  }\n\n  return (\n    <CollapsibleContext.Provider value={{ isOpen, toggleCollapsible }}>\n      {props.children}\n    </CollapsibleContext.Provider>\n  )\n}\n\nexport default CollapsibleContextProvider\n","import React from 'react'\nimport CollapsibleContextProvider from './contexts/CollapsibleContext'\n\nexport default (props: any) => {\n  return (\n    <CollapsibleContextProvider>\n      <div className='collapsible-container'>{props.children}</div>\n    </CollapsibleContextProvider>\n  )\n}\n","import React, { useContext } from 'react'\nimport { CollapsibleContext } from './contexts/CollapsibleContext'\n\nexport default (props: any) => {\n  const { toggleCollapsible } = useContext(CollapsibleContext) as any\n\n  return (\n    <div onClick={toggleCollapsible} className='collapsible-head'>\n      {props.children}\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { CollapsibleContext } from './contexts/CollapsibleContext'\n\nexport default (props: any) => {\n  const { isOpen } = useContext(CollapsibleContext) as any\n  const className = ['collapsible-body']\n  if (isOpen) className.push('is-open')\n  return <div className={className.join(' ')}>{props.children}</div>\n}\n","import React from 'react'\n\nimport {\n  Collapsible,\n  CollapsibleHead,\n  CollapsibleBody\n} from '@mtb/react-collapsible'\nimport '@mtb/react-collapsible/dist/index.css'\n\nconst App = () => {\n  return (\n    <Collapsible>\n      <CollapsibleHead>Toggle me</CollapsibleHead>\n      <CollapsibleBody>Some content</CollapsibleBody>\n    </Collapsible>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}